{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pagesEmount","className","href","map","page","classNames","active","onClick","items","App","useState","optionValue","setOptionValue","setCurrentPage","abcc","math","slice","Math","min","length","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAAwC,SAAC,GAK/C,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAcJ,EAAQC,EAE5B,OACE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UAAU,qBAAd,SACE,mBACE,UAAQ,WACRA,UAAU,YACVC,KAAK,QACL,gBAAc,OAJhB,oBAUDb,EAAW,EAAGW,GAAaG,KAAI,SAAAC,GAAI,OAClC,oBACEH,UAAWI,IACT,YACA,CAAEC,OAAQF,IAASN,IAHvB,SAOE,mBACE,UAAQ,WACRG,UAAU,YACVC,KAAI,WAAME,GACVG,QAAS,kBAAMR,EAAaK,IAJ9B,SAMGA,KAREA,MAoBT,oBAAIH,UAAU,qBAAd,SACE,mBACE,UAAQ,WACRA,UAAU,YACVC,KAAK,QACL,gBAAc,QAJhB,wBCrDFM,EAAQnB,EAAW,EAAG,IACzBc,KAAI,SAAAV,GAAC,qBAAYA,MAEPgB,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOZ,EAAP,KAAoBe,EAApB,KAIMC,EAAOhB,EAAca,EAAcA,EACnCI,EAAOP,EAAMQ,OAAOlB,EAAc,GAAKa,EAC3CM,KAAKC,KAAKP,EAAaH,EAAMW,SAE/B,OACE,sBAAKlB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWH,EADX,mBACkCA,GAAgBa,EADlD,cACmEG,EADnE,eAC8EN,EAAMW,OADpF,OAIA,sBAAKlB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,MAAOV,EACPW,SAAU,SAACC,GAAD,OAAWX,GAAgBW,EAAMC,OAAOH,QALpD,UAOE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBxB,UAAU,qBAA3C,+BAMF,cAAC,EAAD,CACEL,MAAOY,EAAMW,OACbtB,QAASc,EACTb,YAAaA,EACbC,aAAcc,IAEhB,6BACGE,EAAKZ,KAAI,SAACuB,GAAD,OACR,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCtDlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e528cfb5.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { getNumbers } from '../../utils';\n\ninterface PaginationTypes {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n}\n\nexport const Pagination: React.FC<PaginationTypes> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pagesEmount = total / perPage;\n\n  return (\n    <ul className=\"pagination\">\n      <li className=\"page-item disabled\">\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled=\"true\"\n        >\n          «\n        </a>\n      </li>\n\n      {getNumbers(1, pagesEmount).map(page => (\n        <li\n          className={classNames(\n            'page-item',\n            { active: page === currentPage },\n          )}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      {/* <li className=\"page-item active\">\n          <a data-cy=\"pageLink\" className=\"page-link\" href=\"#1\">1</a>\n        </li>\n        <li className=\"page-item\">\n          <a data-cy=\"pageLink\" className=\"page-link\" href=\"#2\">2</a>\n        </li> */}\n\n      <li className=\"page-item disabled\">\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled=\"false\"\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [optionValue, setOptionValue] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // const totalPages = Math.ceil(42 / +optionValue);\n\n  const abcc = currentPage * optionValue + optionValue;\n  const math = items.slice((currentPage - 1) * optionValue,\n    Math.min(+optionValue, items.length));\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${(currentPage) * +optionValue} - ${abcc} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={optionValue}\n            onChange={(event) => setOptionValue(+event.target.value)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        total={items.length}\n        perPage={optionValue}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n      <ul>\n        {math.map((item) => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}